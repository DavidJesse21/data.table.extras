% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/melt_matrix.R
\name{melt_matrix}
\alias{melt_matrix}
\title{Reshape a contingency table like matrix to a long data.table}
\usage{
melt_matrix(x, name_row = "row", name_col = "column", name_val = "value")
}
\arguments{
\item{x}{(\code{matrix()})\cr
A matrix.}

\item{name_row}{(\code{character(1)})\cr
A string specifying the column name associated with the rows of the matrix.}

\item{name_col}{(\code{character(1)})\cr
A string specifying the column name associated with the columns of the matrix.}

\item{name_val}{(\code{character(1)})\cr
A string specifying the column name associated with the cells/values of the matrix.}
}
\value{
(\code{data.table::data.table()})\cr
A \code{data.table} representing \code{x} in a long format.
}
\description{
\code{melt_matrix()} takes a matrix as input, which has the shape of a contingency table.
Hence, the row and column names/indices are considered as unique values of a
(categorical) variable and the cells represent values associated with the
respective row-column combinations.
The function then transforms the data to a long data.table representation.
}
\note{
If the supplied matrix does not have row and/or column names, it will be supplied
with the matching indices.\cr
The columns of the data.table created from the row and column names are always
of type "character".
If a type conversion is desired, this has to be done by the
user afterwards manually.
}
