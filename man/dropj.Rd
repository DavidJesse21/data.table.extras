% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dropj.R
\name{dropj}
\alias{dropj}
\alias{dropj_at}
\alias{dropj_if}
\alias{dropj_grep}
\title{Drop columns conditionally by reference}
\usage{
dropj_at(DT, cols)

dropj_if(DT, .p)

dropj_grep(DT, pattern)
}
\arguments{
\item{DT}{(\code{data.table::data.table()})\cr
A \code{data.table}.}

\item{cols}{(\code{character()} or \code{numeric()})\cr
A vector of integer column indices or character column names.}

\item{.p}{(\verb{function()})\cr
A predicate function that will be applied to all columns and returns
a logical vector.}

\item{pattern}{(\code{character(1)})\cr
A regular expression pattern as used by \code{grep()}.}
}
\description{
These functions drop columns of your \code{data.table} by reference
based on a selection of columns, a predicate function or a regex pattern that the
column name must match.
}
\details{
\code{dropj_at()} drops column based on a vector of column indices or column names.

\code{dropj_if()} takes predicate function \code{.p} as an input that will
be applied to each of the columns and returns a logical vector.
It will then drop those columns for which the function returns \code{TRUE}.

\code{dropj_grep()} takes a regex pattern as input and will check if the
column names match that pattern. If so, they will be dropped.
}
